{"title":"simpleNodeServer","slug":"simpleNodeServer","date":"2019-09-24T15:09:31.000Z","updated":"2019-09-26T15:21:42.988Z","comments":true,"path":"api/articles/simpleNodeServer.json","photos":[],"link":"","excerpt":"Node实现一个简单的服务器，并初步实现路由 [Figure] ","covers":["/2019/09/24/simpleNodeServer/node_router.gif","/2019/09/24/simpleNodeServer/node_router.gif"],"content":"<h4 id=\"Node实现一个简单的服务器，并初步实现路由\"><a href=\"#Node实现一个简单的服务器，并初步实现路由\" class=\"headerlink\" title=\"Node实现一个简单的服务器，并初步实现路由\"></a>Node实现一个简单的服务器，并初步实现路由</h4><p><img src=\"/2019/09/24/simpleNodeServer/node_router.gif\" alt></p>\n<a id=\"more\"></a>\n<p>首先，用Node去创建一个最简单最基本的HTTP服务器，创建一个<code>server.js</code>文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 引入http模块</span><br><span class=\"line\">var http = require(&apos;http&apos;);</span><br><span class=\"line\">// 调用http模块中的createServer函数，</span><br><span class=\"line\">var server = http.createServer( (request , response) =&gt;&#123;</span><br><span class=\"line\">    response.writeHead(200,&#123; &apos;Content-Type&apos; : &apos;text/plain&apos; &#125;);</span><br><span class=\"line\">    response.write(&quot;helloworld&quot;);</span><br><span class=\"line\">    response.end();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">//通过createServer提供的listen方法添加监听的端口号</span><br><span class=\"line\">server.listen(8888);</span><br><span class=\"line\">//打印启动成功日志</span><br><span class=\"line\">console.log(&quot;Server Started Successfule!&quot;)</span><br></pre></td></tr></table></figure>\n\n<p>做完这些，<code>window</code>+<code>R</code>打开终端，<code>cd</code>到文件存放的根目录 ，运行 <code>node server.js</code>,打开本地端口号为<a href=\"http://localhost:8888\" target=\"_blank\" rel=\"noopener\">http://localhost:8888</a>的地址，你会发现页面上出现 了 <code>helloworld</code>。</p>\n<p>我们更希望将他当做一个模块化的文件去使用，并尝试去调用它里面的方法，所以将他稍微改写如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function startServer()&#123;</span><br><span class=\"line\">    function onRequest(request , response)&#123;</span><br><span class=\"line\">        response.writeHead(200,&#123; &apos;Content-Type&apos; : &apos;text/plain&apos; &#125;);</span><br><span class=\"line\">        response.write(&quot;helloworld&quot;);</span><br><span class=\"line\">        response.end();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">http.createServer(onRequest).listen(8888);</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(&quot;Server Started Successfule!&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//这里使用CommonJs规范去导出文件</span><br><span class=\"line\">exports.startServer = startServer;</span><br><span class=\"line\">// 这样相当于 module.exports.startServer = startServer;</span><br></pre></td></tr></table></figure>\n\n<p>接着 我们去创建一个<code>index.js</code>,内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//引入server.js</span><br><span class=\"line\">var server = require(&apos;./server&apos;);</span><br><span class=\"line\">//调用里面的startServer();</span><br><span class=\"line\">server.startServer();</span><br></pre></td></tr></table></figure>\n\n<p>命令行执行<code>node index.js</code>,浏览器打开本地服务器，和上面运行的结果是一样的。<br>继续往下写：</p>\n<h6 id=\"server-js\"><a href=\"#server-js\" class=\"headerlink\" title=\"server.js\"></a>server.js</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var url = require(&apos;url&apos;)</span><br><span class=\"line\">···</span><br><span class=\"line\">    function onRequest(request , response)&#123;</span><br><span class=\"line\">        //在这里顶一个pathname的变量，用来存放路由地址</span><br><span class=\"line\">        var pathname =  url.parse(resquest.url).pathname;</span><br><span class=\"line\">        //在这里打印一下pathname</span><br><span class=\"line\">        console.log(&quot;request for&quot; + pathname + &quot;received&quot;);   </span><br><span class=\"line\">        response.writeHead(200,&#123; &apos;Content-Type&apos; : &apos;text/plain&apos; &#125;);</span><br><span class=\"line\">        response.write(&quot;helloworld&quot;);</span><br><span class=\"line\">         response.end();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">···</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"创建router-js文件\"><a href=\"#创建router-js文件\" class=\"headerlink\" title=\"创建router.js文件\"></a>创建<code>router.js</code>文件</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function route(pathname)&#123;</span><br><span class=\"line\">    console.log(&quot;About to route a request for &quot; + pathname);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.route = route;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"将路由与服务器整合\"><a href=\"#将路由与服务器整合\" class=\"headerlink\" title=\"将路由与服务器整合\"></a>将路由与服务器整合</h6><h6 id=\"server-js-1\"><a href=\"#server-js-1\" class=\"headerlink\" title=\"server.js\"></a>server.js</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function startServer(route)&#123;</span><br><span class=\"line\">    function onRequest(request , response)&#123;</span><br><span class=\"line\">        var pathname =  url.parse(resquest.url).pathname;</span><br><span class=\"line\"></span><br><span class=\"line\">        route(pathname);</span><br><span class=\"line\"></span><br><span class=\"line\">        response.writeHead(200,&#123; &apos;Content-Type&apos; : &apos;text/plain&apos; &#125;);</span><br><span class=\"line\">        response.write(&quot;helloworld&quot;);</span><br><span class=\"line\">        response.end();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">http.createServer(onRequest).listen(8888);</span><br><span class=\"line\">console.log(&quot;Server Started Successfule!&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这一步将函数作为函数传递到startServer()里面去，然后调用route(pathname)<br>同时<code>index.js</code>改为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var server = require(&quot;./server&quot;);</span><br><span class=\"line\">var router = require(&quot;./router&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">server.startServer(router.route);</span><br></pre></td></tr></table></figure>\n\n<p>这个时候再去运行一下<code>node index.js</code>,随便请求一个url,控制台就会打印一些信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Request for /$你输入的url received.</span><br><span class=\"line\">About to route a request for /foo</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"创建requireHandlers-js文件\"><a href=\"#创建requireHandlers-js文件\" class=\"headerlink\" title=\"创建requireHandlers.js文件\"></a>创建requireHandlers.js文件</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function start() &#123;</span><br><span class=\"line\">  console.log(&quot;Request handler &apos;start&apos; was called.&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function upload() &#123;</span><br><span class=\"line\">  console.log(&quot;Request handler &apos;upload&apos; was called.&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.start = start;</span><br><span class=\"line\">exports.upload = upload;</span><br></pre></td></tr></table></figure>\n\n<p>这样我们就可以把请求处理程序和路由模块连接起来，让路由“有路可寻”。</p>\n<h6 id=\"先去index-js中\"><a href=\"#先去index-js中\" class=\"headerlink\" title=\"先去index.js中\"></a>先去index.js中</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var server = require(&quot;./server&quot;);</span><br><span class=\"line\">var router = require(&quot;./router&quot;);</span><br><span class=\"line\">var requestHandlers = require(&quot;./requestHandlers&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">//添加url路径，存放到一个集合里面</span><br><span class=\"line\">var handle = &#123;&#125;</span><br><span class=\"line\">handle[&quot;/&quot;] = requestHandlers.start;</span><br><span class=\"line\">handle[&quot;/start&quot;] = requestHandlers.start;</span><br><span class=\"line\">handle[&quot;/upload&quot;] = requestHandlers.upload;</span><br><span class=\"line\"></span><br><span class=\"line\">server.startServer(router.route, handle);</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"server-js-2\"><a href=\"#server-js-2\" class=\"headerlink\" title=\"server.js\"></a>server.js</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">····</span><br><span class=\"line\">function startServer(route, handle) &#123;</span><br><span class=\"line\">  function onRequest(request, response) &#123;</span><br><span class=\"line\">    var pathname = url.parse(request.url).pathname;</span><br><span class=\"line\">    console.log(&quot;Request for &quot; + pathname + &quot; received.&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    route(handle, pathname);</span><br><span class=\"line\"></span><br><span class=\"line\">    response.writeHead(200, &#123;&quot;Content-Type&quot;: &quot;text/plain&quot;&#125;);</span><br><span class=\"line\">    response.write(&quot;Hello World&quot;);</span><br><span class=\"line\">    response.end();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  http.createServer(onRequest).listen(8888);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">····</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"router-js-文件\"><a href=\"#router-js-文件\" class=\"headerlink\" title=\"router.js 文件\"></a>router.js 文件</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function route(handle, pathname) &#123;</span><br><span class=\"line\">  console.log(&quot;About to route a request for &quot; + pathname);</span><br><span class=\"line\">    //判断如果是一个函数类型的，就调用handle(pathname)方法</span><br><span class=\"line\">  if (typeof handle[pathname] === &apos;function&apos;) &#123;</span><br><span class=\"line\">    handle[pathname]();</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    console.log(&quot;No request handler found for &quot; + pathname);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">····</span><br></pre></td></tr></table></figure>\n\n<p>命令行运行<code>node index.js</code>，并请求<a href=\"http://localhost:8888/start，你会发现终端已经可以打印出一些有用的信息了\" target=\"_blank\" rel=\"noopener\">http://localhost:8888/start，你会发现终端已经可以打印出一些有用的信息了</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Request for /start received.</span><br><span class=\"line\">About to route a request for /start</span><br><span class=\"line\">Request handler &apos;start&apos; was called.</span><br></pre></td></tr></table></figure>\n\n<p>唯一不好看的一点是，希望处理程序能够返回一些有用的信息，能让用户看到路由改变了。</p>\n<h6 id=\"修改requireHandlers-js文件\"><a href=\"#修改requireHandlers-js文件\" class=\"headerlink\" title=\"修改requireHandlers.js文件\"></a>修改requireHandlers.js文件</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function start() &#123;</span><br><span class=\"line\">  console.log(&quot;Request handler &apos;start&apos; was called.&quot;);</span><br><span class=\"line\">  return &quot;Hello Start&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function upload() &#123;</span><br><span class=\"line\">  console.log(&quot;Request handler &apos;upload&apos; was called.&quot;);</span><br><span class=\"line\">  return &quot;Hello Upload&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.start = start;</span><br><span class=\"line\">exports.upload = upload;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"修改router-js文件\"><a href=\"#修改router-js文件\" class=\"headerlink\" title=\"修改router.js文件\"></a>修改router.js文件</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function route(handle, pathname) &#123;</span><br><span class=\"line\">  console.log(&quot;About to route a request for &quot; + pathname);</span><br><span class=\"line\">  if (typeof handle[pathname] === &apos;function&apos;) &#123;</span><br><span class=\"line\">    return handle[pathname]();</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    console.log(&quot;No request handler found for &quot; + pathname);</span><br><span class=\"line\">    return &quot;404 Not found&quot;;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.route = route;</span><br></pre></td></tr></table></figure>\n\n<h6 id=\"在server-js文件中添加如下\"><a href=\"#在server-js文件中添加如下\" class=\"headerlink\" title=\"在server.js文件中添加如下\"></a>在server.js文件中添加如下</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> function onRequest(request, response) &#123;</span><br><span class=\"line\">    var pathname = url.parse(request.url).pathname;</span><br><span class=\"line\">    console.log(&quot;Request for &quot; + pathname + &quot; received.&quot;);</span><br><span class=\"line\">    response.writeHead(200, &#123;&quot;Content-Type&quot;: &quot;text/plain&quot;&#125;);</span><br><span class=\"line\">// 用来接受函数调用的返回值，通过write方法传递给浏览器</span><br><span class=\"line\">    var content = route(handle, pathname)</span><br><span class=\"line\">    response.write(content);</span><br><span class=\"line\"></span><br><span class=\"line\">    response.end();</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样 就大功告成了~<br><img src=\"/2019/09/24/simpleNodeServer/node_router.gif\" alt></p>\n","categories":[],"tags":[{"name":"-Node学习笔记","slug":"Node学习笔记","count":1,"path":"api/tags/Node学习笔记.json"}]}
{"name":"-Flutter","slug":"Flutter","count":5,"postlist":[{"title":"Flutter踩坑记---关于SimpleDialog报错","slug":"Flutter","date":"2019-07-04T17:52:00.000Z","updated":"2019-08-06T15:26:10.944Z","comments":true,"path":"api/articles/Flutter.json","excerpt":"<p>看了好久的官网，对于官方文档给的这个demo，始终不太明白，今天将报错百度了一下，终于解惑了。直接上SimpleDialog正确写法的demo</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">void main() =&gt;runApp(MyApp());</span><br><span class=\"line\"></span><br><span class=\"line\">class MyApp extends StatelessWidget&#123;</span><br><span class=\"line\">  @override </span><br><span class=\"line\">  Widget build(BuildContext context)&#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      home: Dlog()</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Dlog extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _DlogState createState() =&gt; _DlogState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _DlogState extends State&lt;Dlog&gt; &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        body: Center(</span><br><span class=\"line\">          child: Container(</span><br><span class=\"line\">            child: MaterialButton(</span><br><span class=\"line\">              child: Text(&quot;点我一下&quot;),</span><br><span class=\"line\">              onPressed: ()&#123;</span><br><span class=\"line\">                showDialog(</span><br><span class=\"line\">                  context: context,</span><br><span class=\"line\">                  builder: (BuildContext context)&#123;</span><br><span class=\"line\">                    return SimpleDialog(</span><br><span class=\"line\">                      title: Text(&quot;我是title&quot;),</span><br><span class=\"line\">                      children: &lt;Widget&gt;[</span><br><span class=\"line\">                        SimpleDialogOption(</span><br><span class=\"line\">                          child: Text(&quot;选项一&quot;),</span><br><span class=\"line\">                          onPressed: ()&#123; print(&quot;选项一&quot;);&#125;,</span><br><span class=\"line\">                        ),</span><br><span class=\"line\">                        SimpleDialogOption(</span><br><span class=\"line\">                          child: Text(&quot;选项二&quot;),</span><br><span class=\"line\">                          onPressed: ()&#123; print(&quot;选项二&quot;);&#125;,</span><br><span class=\"line\">                        )</span><br><span class=\"line\">                      ],</span><br><span class=\"line\">                    );</span><br><span class=\"line\">                  &#125;</span><br><span class=\"line\">                ).then((val)&#123;</span><br><span class=\"line\">                  print(val);</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","keywords":null,"cover":"/2019/07/05/Flutter/simpleDialogError.PNG","content":null,"text":"看了好久的官网，对于官方文档给的这个demo，始终不太明白，今天将报错百度了一下，终于解惑了。直接上SimpleDialog正确写法的demo1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"-Flutter","slug":"Flutter","count":5,"path":"api/tags/Flutter.json"}]},{"title":"flutter_login","slug":"flutter-login","date":"2019-09-17T15:20:38.000Z","updated":"2019-09-18T11:20:19.034Z","comments":true,"path":"api/articles/flutter-login.json","excerpt":"","keywords":null,"cover":"/2019/09/17/flutter-login/login.PNG","content":"<p>写完chatPage之后 ，突发奇想的继续写一个<code>Login</code>的页面，先实现基本的页面布局，表单验证等功能后续添加，宇宙第一规则：先上图<br><img src=\"/2019/09/17/flutter-login/login.PNG\" alt><br>页面自己随便设计的，不喜勿喷</p>\n<p>这种布局相对来说还是比较简单的，整体我这里采用的是一个ListView，里面添加表单按钮等组件就好了，<br>代码如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">class LoginPage extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _LoginPageState createState() =&gt; _LoginPageState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _LoginPageState extends State&lt;LoginPage&gt; &#123;</span><br><span class=\"line\">  TextEditingController account = new TextEditingController();</span><br><span class=\"line\">  TextEditingController password = new TextEditingController();</span><br><span class=\"line\">  final commonStyle = TextStyle(color: Colors.white,fontSize: 18,fontWeight: FontWeight.bold);</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Scaffold(</span><br><span class=\"line\">      body: Container(</span><br><span class=\"line\">        decoration: BoxDecoration(</span><br><span class=\"line\">            color: Color.fromRGBO(67, 83, 109, 1)</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        child: ListView(</span><br><span class=\"line\">          children: &lt;Widget&gt;[</span><br><span class=\"line\">//            logo</span><br><span class=\"line\">            Container(</span><br><span class=\"line\">              margin: const EdgeInsets.symmetric(vertical: 50),</span><br><span class=\"line\">              child: Center(</span><br><span class=\"line\">                child: Text(&quot;Chat Demo&quot;,style: TextStyle(color: Colors.white,fontSize: 35,wordSpacing: 10),),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">            ),</span><br><span class=\"line\">//            登录注册表单</span><br><span class=\"line\">            Container(</span><br><span class=\"line\">              height: MediaQuery.of(context).size.height/3,</span><br><span class=\"line\">              margin: const EdgeInsets.symmetric(horizontal: 10,vertical: 20),</span><br><span class=\"line\">              decoration: BoxDecoration(</span><br><span class=\"line\">                color: Colors.white,</span><br><span class=\"line\">                borderRadius: BorderRadius.circular(5)</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              child: new Column(</span><br><span class=\"line\">                mainAxisAlignment: MainAxisAlignment.spaceEvenly,</span><br><span class=\"line\">                children: &lt;Widget&gt;[</span><br><span class=\"line\">//                  输入账号</span><br><span class=\"line\">                  Container(</span><br><span class=\"line\">                    padding:const EdgeInsets.symmetric(horizontal: 20),</span><br><span class=\"line\">                    child: new TextField(</span><br><span class=\"line\">                      controller: account,</span><br><span class=\"line\">                      style: TextStyle(fontSize: 20),</span><br><span class=\"line\">                      maxLines: 1,</span><br><span class=\"line\">                      autofocus: true,</span><br><span class=\"line\">//                      keyboardType:TextInputType.number,</span><br><span class=\"line\">                      decoration: InputDecoration(</span><br><span class=\"line\">                        prefixIcon: Icon(Icons.person,size: 30,),</span><br><span class=\"line\">                        hintText: &quot;请输入您的用户名&quot;,</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">//                  密码输入框</span><br><span class=\"line\">                  Container(</span><br><span class=\"line\">                    padding: const EdgeInsets.symmetric(horizontal: 20),</span><br><span class=\"line\">                    child: new TextField(</span><br><span class=\"line\">                      style: TextStyle(fontSize: 20),</span><br><span class=\"line\">                      controller: password,</span><br><span class=\"line\">                      obscureText: true,</span><br><span class=\"line\">                      decoration: InputDecoration(</span><br><span class=\"line\">                        prefixIcon: Icon(Icons.lock),</span><br><span class=\"line\">                        hintText: &quot;请输入您的密码&quot;</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">                ],</span><br><span class=\"line\">              ),</span><br><span class=\"line\">            ),</span><br><span class=\"line\">//            登录按钮</span><br><span class=\"line\">            InkWell(</span><br><span class=\"line\">              child: Container(</span><br><span class=\"line\">                height: 50,</span><br><span class=\"line\">                alignment: Alignment.center,</span><br><span class=\"line\">                margin: const EdgeInsets.symmetric(horizontal: 10,vertical: 10),</span><br><span class=\"line\">                decoration: BoxDecoration(</span><br><span class=\"line\">                  color:Color.fromRGBO(51, 173, 255, 1),</span><br><span class=\"line\">                  borderRadius: BorderRadius.circular(5),</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                child: Text(&quot;Login&quot;,style: commonStyle),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              onTap: ()&#123;</span><br><span class=\"line\">                print(&quot;login&quot;);</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            ),</span><br><span class=\"line\">//            注册</span><br><span class=\"line\">            Container(</span><br><span class=\"line\">              margin: const EdgeInsets.symmetric(horizontal: 10,vertical: 20),</span><br><span class=\"line\">              alignment: Alignment.center,</span><br><span class=\"line\">              child: InkWell(</span><br><span class=\"line\">                child: Text(&quot;Create New Account&quot;,style: commonStyle),</span><br><span class=\"line\">                onTap: ()&#123;</span><br><span class=\"line\">                  print(&quot;创建新的账号&quot;);</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              ),</span><br><span class=\"line\">            ),</span><br><span class=\"line\">//            忘记密码</span><br><span class=\"line\">            Container(</span><br><span class=\"line\">              margin: const EdgeInsets.symmetric(horizontal: 10,vertical: 15),</span><br><span class=\"line\">              alignment: Alignment.center,</span><br><span class=\"line\">              child: InkWell(</span><br><span class=\"line\">                child: Text(&quot;Forget Your PassWord&quot;,style: commonStyle),</span><br><span class=\"line\">                onTap: ()&#123;</span><br><span class=\"line\">                  print(&quot;创建新的账号&quot;);</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              ),</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ],</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里用到了<code>InkWell</code>这个控件，点进去看下他的构造函数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const InkWell(&#123;</span><br><span class=\"line\">  Key key,</span><br><span class=\"line\">  Widget child,</span><br><span class=\"line\">  GestureTapCallback onTap,</span><br><span class=\"line\">  GestureTapCallback onDoubleTap,</span><br><span class=\"line\">  GestureLongPressCallback onLongPress,</span><br><span class=\"line\">  GestureTapDownCallback onTapDown,</span><br><span class=\"line\">  GestureTapCancelCallback onTapCancel,</span><br><span class=\"line\">  ValueChanged&lt;bool&gt; onHighlightChanged,</span><br><span class=\"line\">  Color highlightColor,</span><br><span class=\"line\">  Color splashColor,</span><br><span class=\"line\">  InteractiveInkFeatureFactory splashFactory,</span><br><span class=\"line\">  double radius,</span><br><span class=\"line\">  BorderRadius borderRadius,</span><br><span class=\"line\">  ShapeBorder customBorder,</span><br><span class=\"line\">  bool enableFeedback = true,</span><br><span class=\"line\">  bool excludeFromSemantics = false,</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>你可以很直观的看到 ，这个控件就是用来包裹一个本身不带有点击事件的元素，从而为这个元素绑定点击事件，所以当你需要为一个元素绑定点击事件时 ，可以优先考虑<code>InkWell</code>,</p>\n","text":"写完chatPage之后 ，突发奇想的继续写一个Login的页面，先实现基本的页面布局，表单验证等功能后续添加，宇宙第一规则：先上图<br> [Figure] 你可以很直观的看到 ，这个控件就是用来包裹一个本身不带有点击事件的元素，从而为这个元素绑定点击事件，所以当你需要为一个元","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"-Flutter","slug":"Flutter","count":5,"path":"api/tags/Flutter.json"}]},{"title":"flutter弹窗系列（二） ","slug":"flutter弹窗系列（二）","date":"2019-07-05T14:34:01.000Z","updated":"2019-08-06T15:26:11.107Z","comments":true,"path":"api/articles/flutter弹窗系列（二）.json","excerpt":"<p>关于flutter的弹窗，有好几种,对于这些个人还是感觉很迷迷瞪瞪的，所以在这里分别写一些demo进行对比，并加以区分，只单纯作为笔记参考。</p>\n<p><strong>一、SimpleDialog</strong><br> 先看一下flutter中文网对SimpleDialog的解释：<br>    <img src=\"/2019/07/05/flutter弹窗系列（二）/SimpleDialog.PNG\" alt></p>\n<p> 顾名思义，这是一个简易的dialog，可能实现的功能不会太多，自己尝试着写了一个简单的demo，仅供参考。<br>   <img src=\"/2019/07/05/flutter弹窗系列（二）/SimpleDemo.gif\" alt><br>    这是个最简单的demo，就是控制台显示用户所点击的列表项，当然，你也可以在每个onPressed下面添加一个<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Navigator.of(context).pop();</span><br><span class=\"line\">//用户每次点击完成之后将自动关闭弹窗</span><br></pre></td></tr></table></figure></p>","keywords":null,"cover":"/2019/07/05/flutter弹窗系列（二）/SimpleDialog.PNG","content":null,"text":"关于flutter的弹窗，有好几种,对于这些个人还是感觉很迷迷瞪瞪的，所以在这里分别写一些demo进行对比，并加以区分，只单纯作为笔记参考。一、SimpleDialog<br> 先看一下flutter中文网对SimpleDialog的解释：<br>     [Figure] ","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"-Flutter","slug":"Flutter","count":5,"path":"api/tags/Flutter.json"}]},{"title":"flutter_widgets","slug":"flutter-widgets","date":"2019-07-13T12:08:51.000Z","updated":"2019-08-06T15:26:10.968Z","comments":true,"path":"api/articles/flutter-widgets.json","excerpt":"","keywords":null,"cover":"/2019/07/13/flutter-widgets/no_wh.PNG","content":"<p><strong>Flutter常用组件</strong></p>\n<ul>\n<li>容器组件</li>\n<li>文本组件</li>\n<li>图片组件</li>\n<li>图标组件<ul>\n<li>图标组件</li>\n<li>图标按钮组件</li>\n<li>凸起按钮组件</li>\n</ul>\n</li>\n<li>列表组件<ul>\n<li>基础列表组件</li>\n<li>水平列表组件</li>\n<li>长列表组件</li>\n<li>网格列表组件</li>\n</ul>\n</li>\n<li>表单组件</li>\n</ul>\n<hr>\n<p><strong>一、容器组件</strong></p>\n<p>Container类似于HTML中的Div（盒子），里面用来容纳子元素，自身具备一些属性，用来调整<br>子元素的位置及自身样式。</p>\n<p>首先，你应该要知道这些：</p>\n<ol>\n<li>如果不给Container设置宽高，但是这个容器有子元素，那么这个容器的大小是由子元素（child）的大小决定的：<br><img src=\"/2019/07/13/flutter-widgets/no_wh.PNG\" alt></li>\n<li>如果给Container设置高度，容器没有子元素，那么这个容器的宽度默认为当前设备屏幕的宽度，高度为赋值的高度，<br><img src=\"/2019/07/13/flutter-widgets/no_child.PNG\" alt></li>\n<li>如果给Container设置高度，容器有子元素，那么这个容器的宽度默认为子元素的宽度，高度为赋值的高度<br><img src=\"/2019/07/13/flutter-widgets/have_child.PNG\" alt></li>\n</ol>\n<p>看一下他的的构造函数:<br><img src=\"/2019/07/13/flutter-widgets/Container.PNG\" alt><br>通一下Container的这些属性</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.alignment,用来快速调整子元素的位置，9个方位(topLeft,topCenter,topRight)</span><br><span class=\"line\">this.padding,众所周知,类似于盒模型的内边距</span><br><span class=\"line\">Color color,Container的背景颜色</span><br><span class=\"line\">Decoration decoration,一个很强大的属性，直译为装饰，通过此属性可设置容器的边框，阴影，渐变，圆角等样式效果</span><br><span class=\"line\">this.foregroundDecoration,子元素的前景色</span><br><span class=\"line\">double width,容器的高度</span><br><span class=\"line\">double height,容器的宽度</span><br><span class=\"line\">BoxConstraints constraints,盒约束，类似于 min-width,max-height 等</span><br><span class=\"line\">this.margin,同padding</span><br><span class=\"line\">this.transform,平移 缩放 旋转 ， 主要适用于动画</span><br><span class=\"line\">this.child,</span><br></pre></td></tr></table></figure>\n\n<p>Tip:</p>\n<ul>\n<li><p>alignment的属性值除了可以写成诸如topLeft,也可以使用坐标表示Alignment(x,y)，以center为原点的坐标轴<br><img src=\"/2019/07/13/flutter-widgets/Alignment.PNG\" alt>,具体用法看源码。</p>\n</li>\n<li><p>padding属性值的多种表示， </p>\n<ul>\n<li>EdgeInsets.all(value),设置四个方向一样的值</li>\n<li>EdgeInsets.only(left:val1,top:left2,bottom:val3,right:val4),单独设置某个方向的值，这个可以同时设置四个方向的值，类似于EdgeInsets.fromLTRB</li>\n<li>EdgeInsets.symmetric(horizontal: val1, vertical: val2),用于设置水平/垂直方向上的值，例如水平方向设置为10，那么子元素的左右内边距分别为10.</li>\n<li>EdgeInsets.fromLTRB(left,top,right,bottom)按照左上右下的顺序分别设置内边距的值</li>\n</ul>\n</li>\n<li><p>Color 关于flutter中color值的表示方法：</p>\n<ul>\n<li>color:Colors.red / Colors.red[100] 对应的颜色英文单词</li>\n<li>color:Color.fromRGBO rgb值,o代表透明度</li>\n<li>color:Color.fromARGB a:Alpha(透明度通道)+RGB色彩模式, 例如：#1e000000，前面两位表示16进制的透明度</li>\n</ul>\n</li>\n<li><p>Decoration Container容易常用的是boxDecoration，继承自Decoration类。</p>\n<ul>\n<li><p>边框：border </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//设置四条黑色的宽度为3的边框</span><br><span class=\"line\">BoxDecoration(</span><br><span class=\"line\">  border: Border.all(color: Colors.black, width: 3, style: BorderStyle.solid)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// 设置单边框：上边框为3px粗细的黑色实线边框，右边框为1px粗细的红色实线边框</span><br><span class=\"line\">BoxDecoration(</span><br><span class=\"line\">  border: Border(</span><br><span class=\"line\">    top: BorderSide(color: Colors.black, width: 2, style: BorderStyle.solid),</span><br><span class=\"line\">    right: BorderSide(color: Colors.red, width: 2, style: BorderStyle.solid),</span><br><span class=\"line\">  ),</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/07/13/flutter-widgets/color1.PNG\" alt><br><img src=\"/2019/07/13/flutter-widgets/color2.PNG\" alt></p>\n</li>\n<li><p>阴影 shadow，和css3中shadow的定义基本上一致，</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BoxDecoration(</span><br><span class=\"line\">  boxShadow: [</span><br><span class=\"line\">    BoxShadow(</span><br><span class=\"line\">      offset: Offset(0, 0),</span><br><span class=\"line\">      blurRadius: 6,</span><br><span class=\"line\">      spreadRadius: 10,</span><br><span class=\"line\">      color: Color.fromARGB(20, 0, 0, 0),</span><br><span class=\"line\">    ),</span><br><span class=\"line\">  ],</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/07/13/flutter-widgets/shadow.PNG\" alt></p>\n</li>\n<li><p>圆角 borderRadius</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 同时设置4个角的圆角为5</span><br><span class=\"line\">BoxDecoration(</span><br><span class=\"line\">  borderRadius: BorderRadius.circular(5),</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// 设置单圆角：左上角的圆角为5，右上角的圆角为10</span><br><span class=\"line\">BoxDecoration(</span><br><span class=\"line\">  borderRadius: BorderRadius.only(</span><br><span class=\"line\">    topLeft: Radius.circular(5),</span><br><span class=\"line\">    topRight: Radius.circular(10),</span><br><span class=\"line\">  ),</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/07/13/flutter-widgets/borderRadius.PNG\" alt></p>\n</li>\n<li><p>渐变 gradient</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 从左到右，黄色到蓝色的线性渐变</span><br><span class=\"line\">BoxDecoration(</span><br><span class=\"line\">  gradient: LinearGradient(</span><br><span class=\"line\">    begin: Alignment.centerLeft,</span><br><span class=\"line\">    end: Alignment.centerRight,</span><br><span class=\"line\">    colors: [Colors.yellow, Colors.blue],</span><br><span class=\"line\">  ),</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// 从中心向四周扩散，黄色到蓝色的径向渐变</span><br><span class=\"line\">BoxDecoration(</span><br><span class=\"line\">  gradient: RadialGradient(</span><br><span class=\"line\">    center: Alignment.center,</span><br><span class=\"line\">    colors: [Colors.yellow, Colors.blue],</span><br><span class=\"line\">  ),</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/07/13/flutter-widgets/%E5%BE%84%E5%90%91graident.PNG\" alt><br><img src=\"/2019/07/13/flutter-widgets/really_graident.PNG\" alt></p>\n</li>\n<li><p>盒约束 Constraints</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 容器的大小将被限制在[100*100 ~ 200*200]内</span><br><span class=\"line\">BoxConstraints(</span><br><span class=\"line\">  minWidth: 100,</span><br><span class=\"line\">  maxWidth: 200,</span><br><span class=\"line\">  minHeight: 100,</span><br><span class=\"line\">  maxHeight: 200,</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<p><strong>二、文本组件</strong></p>\n<ul>\n<li>Text</li>\n</ul>\n<p>看一下他的构造函数(常用)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const Text(</span><br><span class=\"line\">  this.data, &#123;  data 引号引起来用来显示文本信息</span><br><span class=\"line\">  Key key,</span><br><span class=\"line\">  this.style,文本的样式</span><br><span class=\"line\">  this.textAlign,文字的对齐方式</span><br><span class=\"line\">  this.softWrap,文字是否自动换行</span><br><span class=\"line\">  this.overflow,文字溢出所采取对应的操作</span><br><span class=\"line\">  this.maxLines,文字显示的最多行数</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Text文本比较容易理解，难点不多。源码有相关对应样式，一眼明了，不做多解释。</li>\n</ul>\n<hr>\n<ul>\n<li>Text.rich() 富文本</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const Text.rich(</span><br><span class=\"line\">    this.textSpan, 包裹text的容器&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    this.style,</span><br><span class=\"line\">    this.strutStyle,</span><br><span class=\"line\">    this.textAlign,</span><br><span class=\"line\">    this.textDirection,</span><br><span class=\"line\">    this.locale,</span><br><span class=\"line\">    this.softWrap,</span><br><span class=\"line\">    this.overflow,</span><br><span class=\"line\">    this.textScaleFactor,</span><br><span class=\"line\">    this.maxLines,</span><br><span class=\"line\">    this.semanticsLabel,</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n\n<p>Demo:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Text.rich(</span><br><span class=\"line\">   TextSpan(children:[ TextSpan(text:&apos;￥&apos;,style: TextStyle(color: Colors.red,fontSize: 50)),</span><br><span class=\"line\">        TextSpan(text:&apos;人民币&apos;,style: TextStyle(color: Colors.blue,fontSize: 25)) </span><br><span class=\"line\">     ])</span><br><span class=\"line\">    ),</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/07/13/flutter-widgets/text.rich.PNG\" alt></p>\n<hr>\n<p><strong>三、图片组件</strong></p>\n<ul>\n<li>关于图片的引入,直接看图吧，简单明了。</li>\n</ul>\n<p><img src=\"/2019/07/13/flutter-widgets/image.gif\" alt><br>在引入图片的时候有一个小技巧，在上图中，我的Image文件夹中存放两个image图片，但是有没有注意到我只是写了一句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">assets:</span><br><span class=\"line\">    - image/</span><br></pre></td></tr></table></figure>\n\n<p>这个方式表示将引入该文件下所有image的图片，所以你不必像之前一样精确到该文件夹下的每一个image。</p>\n<ul>\n<li><p>关于加载图片资源的几种方式</p>\n<ul>\n<li><code>Image.asset</code> : 加载资源图片</li>\n<li><code>Image.file</code> : 加载本地图片文件</li>\n<li><code>Image.netWork</code> : 加载网络图片</li>\n<li><code>Image.memory</code> : 加载Uint8List资源图片    </li>\n</ul>\n</li>\n<li><p>Image的常用属性:</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"center\">属性名</th>\n<th align=\"center\">类型</th>\n<th align=\"center\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">width/height</td>\n<td align=\"center\">double</td>\n<td align=\"center\">Image容器的宽高</td>\n</tr>\n<tr>\n<td align=\"center\">fit</td>\n<td align=\"center\">BoxFit</td>\n<td align=\"center\">图片的填充模式</td>\n</tr>\n<tr>\n<td align=\"center\">color</td>\n<td align=\"center\">Color</td>\n<td align=\"center\">图片颜色</td>\n</tr>\n<tr>\n<td align=\"center\">colorBlendMode</td>\n<td align=\"center\">BlendMode</td>\n<td align=\"center\">对图层颜色进行混合处理</td>\n</tr>\n<tr>\n<td align=\"center\">alignment</td>\n<td align=\"center\">Alignment</td>\n<td align=\"center\">控制图片的摆放位置</td>\n</tr>\n<tr>\n<td align=\"center\">repeat</td>\n<td align=\"center\">ImageRepeat</td>\n<td align=\"center\">设置图片重复</td>\n</tr>\n<tr>\n<td align=\"center\">centerSlice</td>\n<td align=\"center\">Rect</td>\n<td align=\"center\">可以从矩形图片的9个方向点分别进行拉伸，使图片变形</td>\n</tr>\n</tbody></table>\n<ul>\n<li>图片的充满方式，可以看下图<br><img src=\"/2019/07/13/flutter-widgets/fit1.PNG\" alt><br><img src=\"/2019/07/13/flutter-widgets/fit2.PNG\" alt><br>这是借鉴CSDN上一位大佬写的，放一下<a href=\"https://blog.csdn.net/poorkick/article/details/80458707\" target=\"_blank\" rel=\"noopener\">链接</a>,写的确实很不错。</li>\n</ul>\n<p><strong>四、图标组件</strong></p>\n<ul>\n<li><p>图标</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">icon:Icon(Icons.xxx)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>IconButton 图标按钮组件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const IconButton(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    this.iconSize = 24.0, 默认图标的大小是24</span><br><span class=\"line\">    this.padding = const EdgeInsets.all(8.0),默认图标的内边距为8</span><br><span class=\"line\">    this.alignment = Alignment.center,icon的对齐方式</span><br><span class=\"line\">    @required this.icon, icon图标</span><br><span class=\"line\">    this.color,可设置图标的颜色</span><br><span class=\"line\">    this.highlightColor,长按时Iconbutton的背景颜色</span><br><span class=\"line\">    this.splashColor,长按超过一定时间，边框出现的特效颜色</span><br><span class=\"line\">    this.disabledColor,禁用时的颜色</span><br><span class=\"line\">    @required this.onPressed,</span><br><span class=\"line\">    this.tooltip,按下时的提示,会和splashColor冲突</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>看一下demo吧<br><img src=\"/2019/07/13/flutter-widgets/iconbutton.gif\" alt></p>\n<ul>\n<li>FloatActingButton 浮动按钮组件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return MaterialApp(</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">       floatingActionButton: FloatingActionButton(</span><br><span class=\"line\">          child: Icon(Icons.add),</span><br><span class=\"line\">       ),</span><br><span class=\"line\">       floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,</span><br><span class=\"line\">    )</span><br><span class=\"line\">    );</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><img src=\"/2019/07/13/flutter-widgets/floatActingButton.PNG\" alt></p>\n<ul>\n<li>RaisedButton 凸起按钮组件<br>没什么特殊的地方，同样是继承MaterialButton类，相对于MaterialButton添加了点击的动态效果，以及背景颜色<br><img src=\"/2019/07/13/flutter-widgets/RaisedButton.PNG\" alt></li>\n</ul>\n<p><strong>五、列表组件</strong></p>\n<ul>\n<li>基础列表组件 ListView  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ListView(&#123;</span><br><span class=\"line\">   Key key,</span><br><span class=\"line\">   Axis scrollDirection = Axis.vertical, 列表的排列方向，默认为垂直排列，Axis.horizontal为水平排列</span><br><span class=\"line\">   bool reverse = false,组件是否反向排列</span><br><span class=\"line\">   ScrollController controller,滑动监听</span><br><span class=\"line\">   bool primary, false，如果内容不足，则用户无法滚动 而如果[primary]为true，它们总是可以尝试滚动。</span><br><span class=\"line\">   ScrollPhysics physics,相关的滚动事件</span><br><span class=\"line\">   bool shrinkWrap = false, 内容适配</span><br><span class=\"line\">   EdgeInsetsGeometry padding, 内部边距</span><br><span class=\"line\">   this.itemExtent,确定每一个item的高度 会让item加载更加高效</span><br><span class=\"line\">   double cacheExtent, 设置预加载的区域 </span><br><span class=\"line\">   List&lt;Widget&gt; children = const &lt;Widget&gt;[],</span><br><span class=\"line\">   int semanticChildCount,</span><br><span class=\"line\"> &#125;)</span><br></pre></td></tr></table></figure>\n\n\n</li>\n</ul>\n<pre><code>Tips:</code></pre><ul>\n<li>physics:可选择的属性值<br>   AlwaysScrollableScrollPhysics() 总是可以滑动<br>   NeverScrollableScrollPhysics()禁止滚动<br>   BouncingScrollPhysics() 内容超过一屏 上拉有回弹效果<br>   ClampingScrollPhysics() 包裹内容 不会有回弹</li>\n</ul>\n<ul>\n<li>ListTile <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return ListTile(</span><br><span class=\"line\">   leading: Icon(Icons.home),</span><br><span class=\"line\">   title: Text(item.title),</span><br><span class=\"line\">   //  subtitle: Text(&quot;SubTitle&quot;),</span><br><span class=\"line\">   trailing:Icon(Icons.keyboard_arrow_right),</span><br><span class=\"line\">   contentPadding:EdgeInsets.all(10),</span><br><span class=\"line\">   onTap: ()&#123;</span><br><span class=\"line\">     print(&quot;我点了一下&quot;);</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\">   onLongPress: ()&#123;</span><br><span class=\"line\">     print(&quot;进行了长按操作&quot;);</span><br><span class=\"line\">   &#125;,</span><br><span class=\"line\"> ) ;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><img src=\"/2019/07/13/flutter-widgets/listTile.PNG\" alt></p>\n<ul>\n<li>ListView.builder 构造列表</li>\n</ul>\n<p>看一下demo吧。<br><img src=\"/2019/07/13/flutter-widgets/listview.builder.PNG\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">void main() =&gt; runApp(MyApp());</span><br><span class=\"line\"></span><br><span class=\"line\">class MyApp extends StatelessWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">     home: Scaffold(</span><br><span class=\"line\">       body: ListView.builder(</span><br><span class=\"line\">         itemCount: Items.length,</span><br><span class=\"line\">         itemBuilder: (_,int index)&#123;</span><br><span class=\"line\">           return MessageItem(Items[index]);</span><br><span class=\"line\">         &#125;,</span><br><span class=\"line\">       ),</span><br><span class=\"line\">     ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">List&lt;Item&gt; Items = [</span><br><span class=\"line\">  Item(&quot;title1&quot;),</span><br><span class=\"line\">  Item(&quot;title2&quot;),</span><br><span class=\"line\">  Item(&quot;title3&quot;),</span><br><span class=\"line\">  Item(&quot;title4&quot;),</span><br><span class=\"line\">  Item(&quot;title5&quot;),</span><br><span class=\"line\">];</span><br><span class=\"line\">class Item &#123;</span><br><span class=\"line\"> String title;</span><br><span class=\"line\"> Item(this.title);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">class MessageItem extends StatelessWidget &#123;</span><br><span class=\"line\">  final Item item ;</span><br><span class=\"line\">  MessageItem(this.item);</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return ListTile(</span><br><span class=\"line\">      leading: Icon(Icons.home),</span><br><span class=\"line\">      title: Text(item.title),</span><br><span class=\"line\">      //  subtitle: Text(&quot;SubTitle&quot;),</span><br><span class=\"line\">      trailing:Icon(Icons.keyboard_arrow_right),</span><br><span class=\"line\">      contentPadding:EdgeInsets.all(10),</span><br><span class=\"line\">      onTap: ()&#123;</span><br><span class=\"line\">        print(&quot;我点了一下&quot;);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      onLongPress: ()&#123;</span><br><span class=\"line\">        print(&quot;进行了长按操作&quot;);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ) ;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>需要通过数组来进行查询列表项，所以提前构建好列表项的组件，并存放在builder方法调用的数组中。</p>\n<p>深入了解可查看<a href=\"https://blog.csdn.net/hao_m582/article/details/84112278\" target=\"_blank\" rel=\"noopener\">此篇博客</a></p>\n<ul>\n<li>GridView 网格列表组件<br>关于网格列表属性和ListView差不多，一般实现图片布局的时候会考虑此布局<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GridView(&#123;</span><br><span class=\"line\">    Key key,</span><br><span class=\"line\">    Axis scrollDirection = Axis.vertical,</span><br><span class=\"line\">    bool reverse = false,</span><br><span class=\"line\">    ScrollController controller,</span><br><span class=\"line\">    bool primary,</span><br><span class=\"line\">    ScrollPhysics physics,</span><br><span class=\"line\">    bool shrinkWrap = false,</span><br><span class=\"line\">    EdgeInsetsGeometry padding,</span><br><span class=\"line\">    @required this.gridDelegate,</span><br><span class=\"line\">    double cacheExtent,</span><br><span class=\"line\">    List&lt;Widget&gt; children = const &lt;Widget&gt;[],</span><br><span class=\"line\">    int semanticChildCount,</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p><strong>六、表单</strong><br>    - TextField</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const TextField(&#123;</span><br><span class=\"line\">  Key key,</span><br><span class=\"line\">  this.controller,</span><br><span class=\"line\">  this.decoration = const InputDecoration(),表单的样式，类似于Container中的BoxDecoration</span><br><span class=\"line\">  TextInputType keyboardType,设置弹起键盘的类型</span><br><span class=\"line\">  this.textCapitalization = TextCapitalization.none,</span><br><span class=\"line\">  this.style,输入的内容样式</span><br><span class=\"line\">  inputFormatters: [], //对输入的文字进行限制和校验</span><br><span class=\"line\">  this.textAlign = TextAlign.start,输入的内容文本对齐方式</span><br><span class=\"line\">  this.autofocus = false,自动获取焦点</span><br><span class=\"line\">  this.obscureText = false,是否隐藏输入的内容</span><br><span class=\"line\">  this.autocorrect = true,是否 自动纠正</span><br><span class=\"line\">  this.maxLines = 1,输入框最大的显示行数</span><br><span class=\"line\">  this.minLines,输入框最小的显示行数</span><br><span class=\"line\">  this.expands = false,是否平均分配宽度</span><br><span class=\"line\">  this.maxLength,允许输入文字的最大长度</span><br><span class=\"line\">  this.maxLengthEnforced = true,是否允许输入的字符长度超过限定的字符长度</span><br><span class=\"line\">  this.onChanged, 文本发生改变时的回调</span><br><span class=\"line\">  this.onSubmitted,文本提交时的回调</span><br><span class=\"line\">  this.cursorWidth = 2.0,</span><br><span class=\"line\"> </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">return Center(</span><br><span class=\"line\">    child: Container(</span><br><span class=\"line\">      child: TextField(</span><br><span class=\"line\">        controller: controller,</span><br><span class=\"line\">        decoration: InputDecoration(</span><br><span class=\"line\">          labelText: &quot;我是label&quot;,</span><br><span class=\"line\">          prefixIcon: new Icon(Icons.people),</span><br><span class=\"line\">          suffixIcon: new Icon(Icons.people),</span><br><span class=\"line\">          hintText: &quot;我是hint，类似于h5的placeholder&quot;,</span><br><span class=\"line\">          errorText: &quot;输入错误&quot;,</span><br><span class=\"line\">          border: OutlineInputBorder()</span><br><span class=\"line\">        ),</span><br><span class=\"line\">        style: TextStyle(fontSize: 15.0),</span><br><span class=\"line\">        onChanged: (val)&#123;</span><br><span class=\"line\">          print(controller.text);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        onSubmitted: (val)&#123;</span><br><span class=\"line\">          print(val);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      ),</span><br><span class=\"line\">    ),</span><br><span class=\"line\">  );</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2019/07/13/flutter-widgets/TextField.gif\" alt></p>\n<p>还有一个表单,TextFormField，需要用Form控件作为父级容器，用法和TextField是一样的，区别是他需要一个formKey值，并且自带验证,具体可以查看<a href=\"https://flutterchina.club/text-input/\" target=\"_blank\" rel=\"noopener\">官网</a>对这部分的介绍</p>\n<p>差不多就这些吧，谢谢。</p>\n","text":"Flutter常用组件容器组件文本组件图片组件图标组件图标组件图标按钮组件凸起按钮组件列表组件基础列表组件水平列表组件长列表组件网格列表组件表单组件一、容器组件Container类似于HTML中的Div（盒子），里面用来容纳子元素，自身具备一些属性，用来调整<br>子元素的位置及","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"-Flutter","slug":"Flutter","count":5,"path":"api/tags/Flutter.json"}]},{"title":"flutter_chat_system","slug":"flutter-chatSystem","date":"2019-08-06T12:56:38.000Z","updated":"2019-09-26T14:12:56.170Z","comments":true,"path":"api/articles/flutter-chatSystem.json","excerpt":"","keywords":null,"cover":"/2019/08/06/flutter-chatSystem/sendMessage.gif","content":"<p>最近一直在学习<code>flutter</code>，所以还是有必要去做一些相关笔记的，<code>flutter</code>的生态有待完善，尤其是集成第三方SDK，目前大多数第三方包都是没有给flutter提供直接import集成方法的，但是好在flutter可以使用MethodChannel等方法来与底层进行通信，有助于我们更好的去集成，但是在此之前，你需要对flutter的dart和安卓的java以及Ios的Oc有一定的基础有一定的了解，<br>不然就只能像我这样，黑夜中抓瞎。不多说了，写个聊天的小demo，目前只是实现基础的布局，可以先看预览的一下效果。<br><img src=\"/2019/08/06/flutter-chatSystem/sendMessage.gif\" alt></p>\n<p><strong>第一步 首先实现基础的列表以及路由的跳转</strong><br><img src=\"/2019/08/06/flutter-chatSystem/chatListPage.gif\" alt><br>关于布局，其实没什么可以说的了，这是最基本的布局。因为表单这一块还没有思路，并没有展示出来。<br>整个小demo是分了两个<code>.dart</code>文件的。<br><code>main.dart</code>入口函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\">import &apos;chatPage.dart&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">void main()=&gt; runApp(MyApp());</span><br><span class=\"line\"></span><br><span class=\"line\">class MyApp extends StatelessWidget &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return MaterialApp(</span><br><span class=\"line\">      home: Scaffold(</span><br><span class=\"line\">        appBar: AppBar(</span><br><span class=\"line\">          title: Text(&quot;聊天室&quot;),</span><br><span class=\"line\">          centerTitle: true,</span><br><span class=\"line\"></span><br><span class=\"line\">        ),</span><br><span class=\"line\">        body: ChatList()</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class ChatList extends StatefulWidget &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _ChatListState createState() =&gt; _ChatListState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _ChatListState extends State&lt;ChatList&gt; &#123;</span><br><span class=\"line\">  final title = &quot;花开不败&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return ListView.builder(</span><br><span class=\"line\">          itemCount: messageData.length,</span><br><span class=\"line\">          itemBuilder: (BuildContext context , int index)&#123;</span><br><span class=\"line\">            return InkWell(</span><br><span class=\"line\">              child: MessageItem(messageData[index]),</span><br><span class=\"line\">              onTap: ()&#123;</span><br><span class=\"line\">                print(index);</span><br><span class=\"line\">                Navigator.push(context, MaterialPageRoute(builder: (context) =&gt; ChatPage(title)));</span><br><span class=\"line\">              &#125;,</span><br><span class=\"line\">            );</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">//构造函数，这个函数应该具有：avatar ,nickName , title , chatContent, time 几个属性</span><br><span class=\"line\"> class MessageData&#123;</span><br><span class=\"line\">   String avatar;</span><br><span class=\"line\">   String title;</span><br><span class=\"line\">   String chatContent;</span><br><span class=\"line\">   String time;</span><br><span class=\"line\">   MessageData(this.avatar,this.title,this.chatContent,this.time);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">// 将上述函数存放入数组，</span><br><span class=\"line\">List&lt;MessageData&gt; messageData = [</span><br><span class=\"line\">  MessageData(&quot;image/avatar.ico&quot;, &quot;花开不败&quot;, &quot;哈哈哈，我是你的聊天内容&quot;, &quot;17:45&quot;)</span><br><span class=\"line\">];</span><br><span class=\"line\">// 聊天的布局</span><br><span class=\"line\">class MessageItem extends StatelessWidget &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">  final MessageData message ;</span><br><span class=\"line\">// MessageItem调用MessageData的内部属性，用来填充布局上的一些变量</span><br><span class=\"line\">  MessageItem(this.message);</span><br><span class=\"line\">  final titleStyle = TextStyle(color: Colors.black,fontWeight: FontWeight.bold,fontSize: 18.0);</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return  Container(</span><br><span class=\"line\">      margin: const EdgeInsets.all(5),</span><br><span class=\"line\">      decoration: BoxDecoration(</span><br><span class=\"line\">        // border: Border.all(color: Colors.black,width: 2)</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      child: Row(</span><br><span class=\"line\">        children: &lt;Widget&gt;[</span><br><span class=\"line\">          Image.asset(message.avatar,width: 50,height: 50,),</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">            margin: const EdgeInsets.fromLTRB(15, 5, 5, 5),</span><br><span class=\"line\">            child: Column(</span><br><span class=\"line\">              crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class=\"line\">              children: &lt;Widget&gt;[</span><br><span class=\"line\">                Text(message.title,style: titleStyle,),</span><br><span class=\"line\">                Text(message.chatContent),</span><br><span class=\"line\">              ],</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          Expanded(</span><br><span class=\"line\">            child: Container(</span><br><span class=\"line\">              margin: const EdgeInsets.fromLTRB(0, 0, 0, 20),</span><br><span class=\"line\">              decoration: BoxDecoration(</span><br><span class=\"line\">                // border: Border.all(color: Colors.red,width: 2.0)</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              alignment: Alignment.topRight,</span><br><span class=\"line\">              child: Text(message.time),</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          )</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>需要注意的是，关于列表这一块，不要盲目的去写，首先你应该知道，列表的数据一般都是服务端以一个对象的形式提供，对象内每一个数组都对应着每一个列表项，<br><code>flutter</code>也为我们提供了一个<code>ListView.builder</code>的构造方法，让我们去遍历每一个数组的数据，然后生成列表。当你在开发相关项目时，你会明显的看到控制台打印相关的数据信息，前提是你在<br>初始化了一些第三方即时通讯的SDK并拿到相关列表数据。</p>\n<h2 id=\"在这里记一下关于-flutter-中路由传参吧\"><a href=\"#在这里记一下关于-flutter-中路由传参吧\" class=\"headerlink\" title=\"在这里记一下关于 flutter 中路由传参吧.\"></a>在这里记一下关于 flutter 中<strong>路由传参</strong>吧.</h2><p>在flutter中，通常使用<code>Navigator.push(context, MaterialPageRoute(builder: (context) =&gt; newPage( 要传递的参数 )));</code>来进行参数的传递,<br>例如本篇demo中，假设我们需要将用户的title传到聊天页面中，我们可以使用</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Navigator.push(</span><br><span class=\"line\">    context, </span><br><span class=\"line\">    MaterialPageRoute(</span><br><span class=\"line\">        builder: (context) =&gt; newPage( title //传递的title )</span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">//如果你只在这个页面写上title他下面是会出现红线报错的，因为在你要跳转的另一个页面内并没有发现title这个变量，就是没有去接受这个参数，</span><br><span class=\"line\">所以我们应该去第二个页面内 写一个构造函数用来接受这个参数</span><br><span class=\"line\">class ChatPage extends StatefulWidget &#123;</span><br><span class=\"line\">//在这里接受路由传过来的参数</span><br><span class=\"line\">  final String title;</span><br><span class=\"line\">  ChatPage(this.title);</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _ChatPageState createState() =&gt; _ChatPageState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _ChatPageState extends State&lt;ChatPage&gt; &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  `````</span><br><span class=\"line\">另外当你需要使用的时候 ，你需要 用 widget.变量名 才能正确拿到值，如果传的参数是多个，同理，穿的时候参数用逗号分隔，接受的时候添加大括号，</span><br><span class=\"line\">一定要注意变量名需要正确匹配！</span><br></pre></td></tr></table></figure>\n\n<p><strong>第二步，实现连天页面的布局以及聊天记录</strong><br>然后到了关于聊天消息的页面，这边假设了一下聊天消息，和user识别，以及对应user的头像。先看一下效果图吧。<br><img src=\"/2019/08/06/flutter-chatSystem/chatPage.gif\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">class ChatPage extends StatefulWidget &#123;</span><br><span class=\"line\">  final String title;</span><br><span class=\"line\">  ChatPage(this.title);</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _ChatPageState createState() =&gt; _ChatPageState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _ChatPageState extends State&lt;ChatPage&gt; &#123;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Scaffold(</span><br><span class=\"line\">      appBar: AppBar(</span><br><span class=\"line\">        title: Text(widget.title),</span><br><span class=\"line\">        centerTitle: true,</span><br><span class=\"line\">        leading: IconButton(</span><br><span class=\"line\">          icon: Icon(Icons.arrow_left),</span><br><span class=\"line\">          onPressed: ()&#123;</span><br><span class=\"line\">            Navigator.pop(context);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      body: ListView(</span><br><span class=\"line\">        children: &lt;Widget&gt;[</span><br><span class=\"line\">          ListView(</span><br><span class=\"line\">            shrinkWrap: true,</span><br><span class=\"line\">            physics: new NeverScrollableScrollPhysics(),</span><br><span class=\"line\">            children: &lt;Widget&gt;[</span><br><span class=\"line\">              chatMessageItem(&quot;image/avatar.ico&quot;,&quot;hai，你好啊&quot;,0),</span><br><span class=\"line\">              chatMessageItem(&quot;image/demo2.jpg&quot;,&quot;嗯嗯，你好呀&quot;,1),</span><br><span class=\"line\">              chatMessageItem(&quot;image/avatar.ico&quot;,&quot;嗯嗯，你好呀&quot;,0),</span><br><span class=\"line\">              chatMessageItem(&quot;image/demo2.jpg&quot;,&quot;嗯嗯，你好呀&quot;,1),</span><br><span class=\"line\">              chatMessageItem(&quot;image/avatar.ico&quot;,&quot;嗯嗯，你好呀&quot;,0),</span><br><span class=\"line\">              chatMessageItem(&quot;image/demo2.jpg&quot;,&quot;嗯嗯，你好呀&quot;,1),</span><br><span class=\"line\">              chatMessageItem(&quot;image/avatar.ico&quot;,&quot;嗯嗯，你好呀&quot;,0),</span><br><span class=\"line\">              chatMessageItem(&quot;image/demo2.jpg&quot;,&quot;咱也不敢说咱也不敢问咱也不敢说咱也不敢问咱也不敢说咱也不敢问咱也不敢说咱也不敢问&quot;,1),</span><br><span class=\"line\">              chatMessageItem(&quot;image/avatar.ico&quot;,&quot;嗯嗯，你好呀&quot;,0),</span><br><span class=\"line\">              chatMessageItem(&quot;image/demo2.jpg&quot;,&quot;哈哈哈 恭喜你也看到了我得消息&quot;,1),</span><br><span class=\"line\">                //这些都是伪数据 ，当你真实调用的时候，每条消息都会包含许多信息，conversation:&#123;...&#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">          )</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Widget chatMessageItem(String avatar , String message , int user)&#123;</span><br><span class=\"line\">    return Container(</span><br><span class=\"line\">      margin: EdgeInsets.symmetric(horizontal: 10,vertical:10),</span><br><span class=\"line\">      child:Row(</span><br><span class=\"line\">        mainAxisAlignment: user == 0 ? MainAxisAlignment.start: MainAxisAlignment.end,</span><br><span class=\"line\">        children: &lt;Widget&gt;[</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">              child:user == 0 ?  CircleAvatar(</span><br><span class=\"line\">                backgroundImage: AssetImage(user == 0 ? avatar : &quot;&quot;),</span><br><span class=\"line\">              ):null</span><br><span class=\"line\"></span><br><span class=\"line\">          ),</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">              margin: EdgeInsets.only(left: 10,right: 10),</span><br><span class=\"line\">              width: MediaQuery.of(context).size.width/2,</span><br><span class=\"line\">              decoration: BoxDecoration(</span><br><span class=\"line\">                color: Colors.yellow,</span><br><span class=\"line\">                borderRadius: BorderRadius.only(</span><br><span class=\"line\">                    topLeft: Radius.circular(user == 0 ? 15 : 5),</span><br><span class=\"line\">                    topRight: Radius.circular(user == 1 ? 15 : 5),</span><br><span class=\"line\">                    bottomLeft: Radius.circular(5),</span><br><span class=\"line\">                    bottomRight: Radius.circular(5)</span><br><span class=\"line\">                ),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              child: Padding(</span><br><span class=\"line\">                child: Text(message,style: TextStyle(color: Colors.black,fontSize: 15),softWrap: true,maxLines: 50,),</span><br><span class=\"line\">                padding: EdgeInsets.symmetric(horizontal: 10,vertical: 10),</span><br><span class=\"line\">              )</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">            child:user == 1 ?  CircleAvatar(</span><br><span class=\"line\">              backgroundImage: AssetImage(user == 1 ? avatar : &quot;&quot;),</span><br><span class=\"line\">            ):null</span><br><span class=\"line\">          )</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在这里 ，我们整体的布局建议采用 外层Column嵌套ListView的布局来实现 ，内部ListView用于实现聊天记录的滚动，外层用来保证下面将要写的表单不被键盘弹出框遮住。如果你使用ListView嵌套listview的话 可能会有一些布局显示不出来的小问题 ，解决方案是在外层Listview内添加如下内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shrinkWrap: true, //内容适配</span><br><span class=\"line\">physics: new NeverScrollableScrollPhysics(),// 禁止滚动</span><br></pre></td></tr></table></figure>\n\n<p>我们将每一个对话定义为conversation，这个conversation里面包含消息发送者的资料，以及消息文本 ，将这些数据放在一个数组内，由ListView.builder构造函数将每一条渲染出来，</p>\n<p>聊天页面最重要的便是提供用户输入内容的表单了。</p>\n<hr>\n<p><strong>第三步  完善表单</strong><br>继续更 ，现在完成了表单的输入以及消息内容的发送，老规矩 ，先上图：<br><img src=\"/2019/08/06/flutter-chatSystem/sendMessage.gif\" alt></p>\n<p><strong>整理了一下代码的结构</strong></p>\n<p>chatPage:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &apos;package:flutter/material.dart&apos;;</span><br><span class=\"line\">import &apos;dart:io&apos;;</span><br><span class=\"line\">import &apos;dart:ui&apos;;</span><br><span class=\"line\">class ChatPage extends StatefulWidget &#123;</span><br><span class=\"line\">  final String title;</span><br><span class=\"line\">  ChatPage(this.title);</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  _ChatPageState createState() =&gt; _ChatPageState();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class _ChatPageState extends State&lt;ChatPage&gt; &#123;</span><br><span class=\"line\">  TextEditingController _message = new TextEditingController();</span><br><span class=\"line\">  FocusNode focusNode = new FocusNode();</span><br><span class=\"line\">  bool isSend = false ;</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Scaffold(</span><br><span class=\"line\">      appBar: AppBar(</span><br><span class=\"line\">        title: Text(widget.title),</span><br><span class=\"line\">        centerTitle: true,</span><br><span class=\"line\">        leading: IconButton(</span><br><span class=\"line\">          icon: Icon(Icons.arrow_left),</span><br><span class=\"line\">          onPressed: ()&#123;</span><br><span class=\"line\">            Navigator.pop(context);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        ),</span><br><span class=\"line\">      ),</span><br><span class=\"line\">      body: new Column(</span><br><span class=\"line\">        children: &lt;Widget&gt;[</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">            child:new Flexible(</span><br><span class=\"line\">              child:  InkWell(</span><br><span class=\"line\">                child: ListView.builder(</span><br><span class=\"line\">                  itemCount: conversations.length,</span><br><span class=\"line\">                  itemBuilder: (BuildContext , int index )&#123;</span><br><span class=\"line\">                    return ConversationItem(conversations[index]);</span><br><span class=\"line\">                  &#125;,</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                onTap: ()&#123;</span><br><span class=\"line\">// 点击聊天记录空白处，将表单的焦点，即让弹出的键盘框收回去。</span><br><span class=\"line\">                  focusNode.unfocus();</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              )</span><br><span class=\"line\">            )</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">            padding: const EdgeInsets.symmetric(vertical: 5),</span><br><span class=\"line\">            child: Row(</span><br><span class=\"line\">              children: &lt;Widget&gt;[</span><br><span class=\"line\">                Container(</span><br><span class=\"line\">                  margin:const EdgeInsets.symmetric(horizontal: 10),</span><br><span class=\"line\">                  child: Image.asset(&quot;image/voice.png&quot;,width: 30,height: 30,),</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                Expanded(</span><br><span class=\"line\">                  child: Container(</span><br><span class=\"line\">                    child: TextField(</span><br><span class=\"line\">                      autofocus: true,</span><br><span class=\"line\">                      focusNode: focusNode,</span><br><span class=\"line\">                      style: TextStyle(fontSize: 18,color: Colors.black),</span><br><span class=\"line\">                      controller: _message,</span><br><span class=\"line\">                      decoration: InputDecoration(</span><br><span class=\"line\">                        border: OutlineInputBorder(),</span><br><span class=\"line\">                        contentPadding: EdgeInsets.symmetric(horizontal: 10,vertical: 10),</span><br><span class=\"line\">                        fillColor: Colors.white</span><br><span class=\"line\">                      ),</span><br><span class=\"line\">                      onChanged: (val)&#123;</span><br><span class=\"line\">//                        print(_message.text);</span><br><span class=\"line\">                        if(_message.text == &quot;&quot;)&#123;</span><br><span class=\"line\">                          setState(() &#123;</span><br><span class=\"line\">                            isSend = false ;</span><br><span class=\"line\">                          &#125;);</span><br><span class=\"line\">                        &#125;else if(_message.text != null )&#123;</span><br><span class=\"line\">                          setState(() &#123;</span><br><span class=\"line\">                            isSend = true ;</span><br><span class=\"line\">                          &#125;);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                      &#125;,</span><br><span class=\"line\">                    ),</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">                ),</span><br><span class=\"line\">              Container(</span><br><span class=\"line\">                  margin:const EdgeInsets.symmetric(horizontal: 10),</span><br><span class=\"line\">                  child: isSend == false ? Image.asset(&quot;image/add.png&quot;,width: 30,height: 30,) : InkWell(</span><br><span class=\"line\">                    child: Image.asset(&quot;image/send.png&quot;,width: 30,height: 30,),</span><br><span class=\"line\">                    onTap: ()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">// 点击发送时，我们将存放conversation的数组新增一条消息记录，默认头像是自己的头像 ，用户点击发送后，将表单内的文本内容添加到conversation里面，</span><br><span class=\"line\">并初始化表单为 “” 。</span><br><span class=\"line\">                      setState(() &#123;</span><br><span class=\"line\">                        conversations.add(Conversation(&quot;image/demo2.jpg&quot;, _message.text, 1));</span><br><span class=\"line\">                      &#125;);</span><br><span class=\"line\">                      _message.clear();</span><br><span class=\"line\">                      _message.text == &quot;&quot;;</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                  ),</span><br><span class=\"line\">              )</span><br><span class=\"line\">              ],</span><br><span class=\"line\">            ),</span><br><span class=\"line\">          )</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Conversation &#123;</span><br><span class=\"line\">  String avatar ;</span><br><span class=\"line\">  String text ;</span><br><span class=\"line\">  int user ;</span><br><span class=\"line\">  Conversation(this.avatar,this.text,this.user,);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">List&lt;Conversation&gt; conversations =[</span><br><span class=\"line\">  Conversation(&quot;image/avatar.ico&quot;,&quot;hai，你好啊&quot;,0),</span><br><span class=\"line\">  Conversation(&quot;image/demo2.jpg&quot;,&quot;嗯嗯，你好呀&quot;,1),</span><br><span class=\"line\">  Conversation(&quot;image/avatar.ico&quot;,&quot;嗯嗯，你好呀&quot;,0),</span><br><span class=\"line\">  Conversation(&quot;image/demo2.jpg&quot;,&quot;嗯嗯，你好呀&quot;,1),</span><br><span class=\"line\">  Conversation(&quot;image/avatar.ico&quot;,&quot;嗯嗯，你好呀&quot;,0),</span><br><span class=\"line\">  Conversation(&quot;image/demo2.jpg&quot;,&quot;嗯嗯，你好呀&quot;,1),</span><br><span class=\"line\">  Conversation(&quot;image/avatar.ico&quot;,&quot;嗯嗯，你好呀&quot;,0),</span><br><span class=\"line\">  Conversation(&quot;image/demo2.jpg&quot;,&quot;咱也不敢说咱也不敢问咱也不敢说咱也不敢问咱也不敢说咱也不敢问咱也不敢说咱也不敢问&quot;,1),</span><br><span class=\"line\">  Conversation(&quot;image/avatar.ico&quot;,&quot;嗯嗯，你好呀&quot;,0),</span><br><span class=\"line\">  Conversation(&quot;image/demo2.jpg&quot;,&quot;哈哈哈 恭喜你也看到了我得消息&quot;,1),</span><br><span class=\"line\">];</span><br><span class=\"line\"></span><br><span class=\"line\">class ConversationItem extends StatelessWidget &#123;</span><br><span class=\"line\">  final Conversation conversation ;</span><br><span class=\"line\">  ConversationItem(this.conversation);</span><br><span class=\"line\">  @override</span><br><span class=\"line\">  Widget build(BuildContext context) &#123;</span><br><span class=\"line\">    return Container(</span><br><span class=\"line\">      margin: EdgeInsets.symmetric(horizontal: 10,vertical:10),</span><br><span class=\"line\">      child:Row(</span><br><span class=\"line\">        mainAxisAlignment: conversation.user == 0 ? MainAxisAlignment.start: MainAxisAlignment.end,</span><br><span class=\"line\">        children: &lt;Widget&gt;[</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">              child:conversation.user == 0 ?  CircleAvatar(</span><br><span class=\"line\">                backgroundImage: AssetImage(conversation.user == 0 ? conversation.avatar : &quot;&quot;),</span><br><span class=\"line\">              ):null</span><br><span class=\"line\"></span><br><span class=\"line\">          ),</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">              margin: EdgeInsets.only(left: 10,right: 10),</span><br><span class=\"line\">              width: MediaQuery.of(context).size.width/2,</span><br><span class=\"line\">              decoration: BoxDecoration(</span><br><span class=\"line\">//                        border: Border.all(color: Colors.red,width: 1),</span><br><span class=\"line\">                color: conversation.user == 0 ? Colors.white : Colors.green,</span><br><span class=\"line\">                borderRadius: BorderRadius.only(</span><br><span class=\"line\">                    topLeft: Radius.circular(conversation.user == 0 ? 15 : 5),</span><br><span class=\"line\">                    topRight: Radius.circular(conversation.user == 1 ? 15 : 5),</span><br><span class=\"line\">                    bottomLeft: Radius.circular(5),</span><br><span class=\"line\">                    bottomRight: Radius.circular(5)</span><br><span class=\"line\">                ),</span><br><span class=\"line\">              ),</span><br><span class=\"line\">              child: Padding(</span><br><span class=\"line\">                child: Text(conversation.text,style: TextStyle(color: Colors.black,fontSize: 15),softWrap: true,maxLines: 50,),</span><br><span class=\"line\">                padding: EdgeInsets.symmetric(horizontal: 10,vertical: 10),</span><br><span class=\"line\">              )</span><br><span class=\"line\">          ),</span><br><span class=\"line\">          Container(</span><br><span class=\"line\">              child:conversation.user == 1 ?  CircleAvatar(</span><br><span class=\"line\">                backgroundImage: AssetImage(conversation.user == 1 ? conversation.avatar : &quot;&quot;),</span><br><span class=\"line\">              ):null</span><br><span class=\"line\">          )</span><br><span class=\"line\">        ],</span><br><span class=\"line\">      ),</span><br><span class=\"line\">    );</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"继续更新一下代码存在的问题：\"><a href=\"#继续更新一下代码存在的问题：\" class=\"headerlink\" title=\"继续更新一下代码存在的问题：\"></a>继续更新一下代码存在的问题：</h3><ul>\n<li><p>修改输入框使用的固定宽度，改用 <code>constraints</code> 来为聊天消息的容器设置最大宽度，如果小于最大宽度，默认容器大小由子元素撑开，大于最大宽度，<br>默认换行。<br>在聊天消息的布局处添加contraints属性，设置maxWidth</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">constraints: BoxConstraints(</span><br><span class=\"line\">                maxWidth: MediaQuery.of(context).size.width/2,</span><br><span class=\"line\">              ),</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>完善输入框输入完内容后 “+” 图标无法替换发送的图标，在发送消息事件最后把<code>isSend</code>设置为false</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">onTap: ()&#123;</span><br><span class=\"line\">  setState(() &#123;</span><br><span class=\"line\">    conversations.add(Conversation(&quot;image/demo2.jpg&quot;, _message.text, 1));</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  _message.clear();</span><br><span class=\"line\">//修改isSend的值</span><br><span class=\"line\">  isSend = false ;</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h5 id=\"再来看一下效果\"><a href=\"#再来看一下效果\" class=\"headerlink\" title=\"再来看一下效果\"></a>再来看一下效果</h5><p><img src=\"/2019/08/06/flutter-chatSystem/sendMessageTwo.gif\" alt></p>\n","text":"最近一直在学习flutter，所以还是有必要去做一些相关笔记的，flutter的生态有待完善，尤其是集成第三方SDK，目前大多数第三方包都是没有给flutter提供直接import集成方法的，但是好在flutter可以使用MethodChannel等方法来与底层进行通信，有助于我","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"-Flutter","slug":"Flutter","count":5,"path":"api/tags/Flutter.json"}]}]}